// Online C++ compiler to run C++ program online
#include <iostream>
using namespace std;

class node{
    public:
    int data;
    node* next;
    
    node(int data)
    {
        this->data=data;
        this->next=NULL; 
    }
    
};

int getlen(node* head)
{
    int len=0;
    while(head!=NULL)
    {
        len++;
        head=head->next;
    }
    return len;
}

node* krev(node* head,int  k)
{
    //base call
    if(head==NULL)
    {
        return NULL;
    }
    
    node* forward=NULL;
    node* curr=head;
    node* prev=NULL;
    int c=0;
    
    while(curr!=NULL && c<k)
    {
        forward=curr->next;
        curr->next=prev;
        prev=curr;
        curr=forward;
        c++;
    }
    //recurseion dekhega 
    
    if(forward!=NULL)
    {
        head->next=krev(forward,3);
    }
    
    //step 3 return head of reversed list 
    return prev;
}


void insertathead(node* &head ,int d)    //& is used so it doees not make any copy of the  data since we want to a original linked list not a copy   
{
    //new node created 
    node* temp=new node(d);   //new node created for the formt of the  class nde 
    temp->next=head;   //got its address pointed to the older linked list
    head=temp;       //its head got updated 
}

void print(node* &head)
{
    int i=0;
    node* temp =head;
    
    while(temp!=NULL)
    {
        i++;
        cout<<"data of temp "<<i<<"::"<<temp->data<<endl;
        temp=temp->next;
    }
}

int main() 
{
    node* node1 =new node(0);
    cout<<node1->data<<endl; //node is created in dynamic memory 
    cout<<node1->next<<endl;
    
    //head pointed to node1
    node* head= node1;
    int i,a=0;

    for(i=0;i<9;i++)
    {
        cout<<"input data"<<endl;
        insertathead(head,i);

        
    }
    print(head);
    
    node* u=krev(head,2);
    
    print(u);
    

    return 0;
}